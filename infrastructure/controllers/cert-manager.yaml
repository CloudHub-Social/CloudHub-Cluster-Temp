---
apiVersion: v1
kind: Namespace
metadata:
  name: cert-manager
  labels:
    kustomize.toolkit.fluxcd.io/prune: disabled
---
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: jetstack
  namespace: flux-system
spec:
  interval: 1h
  url: https://charts.jetstack.io/
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: cert-manager
  namespace: cert-manager
spec:
  interval: 15m
  chart:
    spec:
      chart: cert-manager
      version: v1.14.5
      sourceRef:
        kind: HelmRepository
        name: jetstack
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 10
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 10
  uninstall:
    keepHistory: false
  values:
    installCRDs: true
    extraArgs:
      - --dns01-recursive-nameservers=1.1.1.1:53,9.9.9.9:53
      - --dns01-recursive-nameservers-only
    podDnsPolicy: None
    podDnsConfig:
      nameservers:
        - "1.1.1.1"
        - "9.9.9.9"
    prometheus:
      enabled: true
      servicemonitor:
        enabled: true
        prometheusInstance: monitoring
# ---
# apiVersion: monitoring.coreos.com/v1
# kind: PrometheusRule
# metadata:
#   name: cert-manager.rules
#   namespace: cert-manager
# spec:
#   groups:
#     - name: cert-manager
#       rules:
#         - alert: CertManagerAbsent
#           expr: |
#             absent(up{job="cert-manager"})
#           for: 15m
#           labels:
#             severity: critical
#           annotations:
#             description:
#               "New certificates will not be able to be minted, and existing
#               ones can't be renewed until cert-manager is back."
#             runbook_url: https://gitlab.com/uneeq-oss/cert-manager-mixin/-/blob/master/RUNBOOK.md#certmanagerabsent
#             summary: "Cert Manager has dissapeared from Prometheus service discovery."
#     - name: certificates
#       rules:
#         - alert: CertManagerCertExpirySoon
#           expr: |
#             avg by (exported_namespace, namespace, name) (
#             certmanager_certificate_expiration_timestamp_seconds - time())
#               < (21 * 24 * 3600)
#           for: 15m
#           labels:
#             severity: warning
#           annotations:
#             description:
#               "The domain that this cert covers will be unavailable after
#               {{ $value | humanizeDuration }}. Clients using endpoints that this cert
#               protects will start to fail in {{ $value | humanizeDuration }}."
#             runbook_url: https://gitlab.com/uneeq-oss/cert-manager-mixin/-/blob/master/RUNBOOK.md#certmanagercertexpirysoon
#             summary:
#               "The cert {{ $labels.name }} is {{ $value | humanizeDuration }}
#               from expiry, it should have renewed over a week ago."
#         - alert: CertManagerCertNotReady
#           expr: |
#             max by (name, exported_namespace, namespace, condition) (
#             certmanager_certificate_ready_status{condition!="True"} == 1)
#           for: 15m
#           labels:
#             severity: critical
#           annotations:
#             description:
#               "This certificate has not been ready to serve traffic for at least
#               10m. If the cert is being renewed or there is another valid cert, the ingress
#               controller _may_ be able to serve that instead."
#             runbook_url: https://gitlab.com/uneeq-oss/cert-manager-mixin/-/blob/master/RUNBOOK.md#certmanagercertnotready
#             summary: "The cert {{ $labels.name }} is not ready to serve traffic."
#         - alert: CertManagerHittingRateLimits
#           expr: |
#             sum by (host) (rate(certmanager_http_acme_client_request_count{status="429"}[5m]))
#               > 0
#           for: 15m
#           labels:
#             severity: critical
#           annotations:
#             description:
#               "Depending on the rate limit, cert-manager may be unable to generate
#               certificates for up to a week."
#             runbook_url: https://gitlab.com/uneeq-oss/cert-manager-mixin/-/blob/master/RUNBOOK.md#certmanagerhittingratelimits
#             summary: "Cert manager hitting LetsEncrypt rate limits."
