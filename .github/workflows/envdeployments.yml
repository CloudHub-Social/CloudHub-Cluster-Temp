on:
  push:
    paths: "terraform/**"
  pull_request:
    branches:
      - main
      - 'releases/**'
    paths: "terraform/**"
jobs:
  DeployDev:
    name: Deploy to Dev
    permissions:
      pull-requests: write
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    environment:
      name: dev
    env:
      name: dev
      working-directory: terraform
      TF_WORKSPACE: ${{ vars.TF_WORKSPACE }}
      TF_CLOUD_ORGANIZATION: ${{ vars.TF_CLOUD_ORGANIZATION }}
      PLURALITH_ORG_ID: ${{ vars.PLURALITH_ORG_ID }}
      PLURALITH_PROJECT_ID: ${{ vars.PLURALITH_PROJECT_ID }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      # Set up Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false # This is recommended so the `terraform show` command outputs valid JSON
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      # Init Terraform project
      - name: Terraform Init
        run: terraform init
        working-directory: "${{ env.working-directory }}"

      # Set up and authenticate Pluralith
      - name: Pluralith Init
        # uses: Pluralith/actions/init@v1.4.0
        uses: Just-Insane/pluralith-actions/init@e5d17b2206d59f65419079e2c51db6b9096ddcfd
        with:
          terraform-path: "${{ env.working-directory }}"
          api-key: "${{ secrets.PLURALITH_API_KEY }}"
          org-id: "${{ vars.PLURALITH_ORG_ID }}"
          project-id: "${{ vars.PLURALITH_PROJECT_ID }}"

      # Run Pluralith to generate an infrastructure diagram and comment body
      - name: Pluralith Run
        # uses: Pluralith/actions/run@v1.4.0
        uses: Just-Insane/pluralith-actions/run@e5d17b2206d59f65419079e2c51db6b9096ddcfd
        with:
          terraform-command: "plan"
          terraform-path: "${{ env.working-directory }}"
          title: "${{ env.name }}"
          show-changes: true
          show-drift: true
          show-costs: false # Requires Infracost to be set up in your pipeline

      # Post the generated diagram as a GitHub comment
      # - name: Pluralith Comment
      #   uses: Pluralith/actions/comment@v1.4.0
      #   with:
      #     terraform-path: ${{ env.working-directory }}
      #     target-type: commit

  DeployStaging:
    name: Deploy to Staging
    permissions:
      pull-requests: write
    if: github.event.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment:
      name: stg
    env:
      name: stg
      working-directory: terraform
      TF_WORKSPACE: ${{ vars.TF_WORKSPACE }}
      TF_CLOUD_ORGANIZATION: ${{ vars.TF_CLOUD_ORGANIZATION }}
      PLURALITH_ORG_ID: ${{ vars.PLURALITH_ORG_ID }}
      PLURALITH_PROJECT_ID: ${{ vars.PLURALITH_PROJECT_ID }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      # Set up Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false # This is recommended so the `terraform show` command outputs valid JSON
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      # Init Terraform project
      - name: Terraform Init
        run: terraform init
        working-directory: "${{ env.working-directory }}"

      # Set up and authenticate Pluralith
      - name: Pluralith Init
        # uses: Pluralith/actions/init@v1.4.0
        uses: Just-Insane/pluralith-actions/init@e5d17b2206d59f65419079e2c51db6b9096ddcfd
        with:
          terraform-path: "${{ env.working-directory }}"
          api-key: "${{ secrets.PLURALITH_API_KEY }}"
          org-id: "${{ vars.PLURALITH_ORG_ID }}"
          project-id: "${{ vars.PLURALITH_PROJECT_ID }}"

      # Run Pluralith to generate an infrastructure diagram and comment body
      - name: Pluralith Run
        # uses: Pluralith/actions/run@v1.4.0
        uses: Just-Insane/pluralith-actions/run@e5d17b2206d59f65419079e2c51db6b9096ddcfd
        with:
          terraform-command: "plan"
          terraform-path: "${{ env.working-directory }}"
          title: "${{ vars.JOB_NAME }}"
          show-changes: true
          show-drift: true
          show-costs: false # Requires Infracost to be set up in your pipeline


      # Post the generated diagram as a GitHub comment
      # - name: Pluralith Comment
      #   uses: Pluralith/actions/comment@v1.4.0
      #   with:
      #     terraform-path: ${{ env.working-directory }}

  # DeployProd:
  #   name: Deploy to Production
  #   permissions:
  #     pull-requests: write
  #   needs: [DeployStaging]
  #   runs-on: ubuntu-latest
  #   environment:
  #     name: prod
  #   env:
  #     name: prod
  #     working-directory: terraform
  #     TF_WORKSPACE: ${{ vars.TF_WORKSPACE }}
  #     TF_CLOUD_ORGANIZATION: ${{ vars.TF_CLOUD_ORGANIZATION }}
  #     PLURALITH_ORG_ID: ${{ vars.PLURALITH_ORG_ID }}
  #     PLURALITH_PROJECT_ID: ${{ vars.PLURALITH_PROJECT_ID }}

  #   steps:
  #     - name: Check out repository
  #       uses: actions/checkout@v4

  #     # Set up Terraform
  #     - name: Setup Terraform
  #       uses: hashicorp/setup-terraform@v1
  #       with:
  #         terraform_wrapper: false # This is recommended so the `terraform show` command outputs valid JSON
  #         cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

  #     # Init Terraform project
  #     - name: Terraform Init
  #       run: terraform init
  #       working-directory: "${{ env.working-directory }}"

  #     # Set up and authenticate Pluralith
  #     - name: Pluralith Init
  #       # uses: Pluralith/actions/init@v1.4.0
  #       uses: Just-Insane/pluralith-actions/init@e5d17b2206d59f65419079e2c51db6b9096ddcfd
  #       with:
  #         terraform-path: "${{ env.working-directory }}"
  #         api-key: "${{ secrets.PLURALITH_API_KEY }}"
  #         org-id: "${{ vars.PLURALITH_ORG_ID }}"
  #         project-id: "${{ vars.PLURALITH_PROJECT_ID }}"

  #     # Run Pluralith to generate an infrastructure diagram and comment body
  #     - name: Pluralith Run
  #       # uses: Pluralith/actions/run@v1.4.0
  #       uses: Just-Insane/pluralith-actions/run@e5d17b2206d59f65419079e2c51db6b9096ddcfd
  #       with:
  #         terraform-command: "plan"
  #         terraform-path: "${{ env.working-directory }}"
  #         title: "${{ env.name }}"
  #         show-changes: true
  #         show-drift: true
  #         show-costs: false # Requires Infracost to be set up in your pipeline

  #     # Post the generated diagram as a GitHub comment
  #     # - name: Pluralith Comment
  #     #   uses: Pluralith/actions/comment@v1.4.0
  #     #   with:
  #     #     terraform-path: ${{ env.working-directory }}
